AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 60
    MemorySize: 128

Resources:
  ChatSessionsTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BedrockInferenceAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                Resource: "*"
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: "*"
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"

  RestApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: main.handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref ChatSessionsTable
      Role: !GetAtt FunctionRole.Arn
      AutoPublishAlias: live
      FunctionUrlConfig:
        AuthType: NONE

Outputs:
  FunctionArn:
    Description: Lambda Function ARN
    Value: !GetAtt RestApiFunction.Arn
  FunctionIamRole:
    Description: Implicit IAM Role created for function
    Value: !GetAtt FunctionRole.Arn
  TableName:
    Description: Chat Sessions DynamoDB Table Name
    Value: !Ref ChatSessionsTable
  Endpoint:
    Description: URL of the REST API endpoint
    Value: !GetAtt RestApiFunctionUrl.FunctionUrl
  RestApiDocs:
    Description: Swagger UI REST API documentation
    Value: !Sub '${RestApiFunctionUrl.FunctionUrl}docs'
